"""
Моржовый (walrus) оператор, появившийся в Python 3.8, дает возможность решить
сразу две задачи: присвоить значение переменной и вернуть это значение, поэтому
порой можно написать код короче и сделать его более читаемым, и он может быть
даже более эффективным с точки зрения вычислений.

Давайте посмотрим на моржовый оператор и приведем примеры того, где он может
быть полезен.

Добавленный в Python 3.8 моржовый оператор (:=), формально известен как оператор
присваивания выражения. Он дает возможность присвоить переменные в выражении,
включая переменные, которых еще не существует. Как было сказано выше, с помощью
простого оператора присваивания (=) мы назначили num равным 15 в контексте
отдельного оператора.

Выражение вычисляется как значение. А инструкция выполняет какое-то действие.

Другими словами, моржовый оператор позволяет нам как присваивать значение
переменной, так и возвращать это значение в одном и том же выражении.
А называется он так, потому что символ (:=) похож на глаза и бивни моржа,
лежащего на боку.

    name := expr

Expr вычисляется, а затем присваивается имени переменной. Это значение и будет
возвращено. Давайте рассмотрим некоторые примеры использования этого оператора.

"""
SIZE = 100
with open('test_data.txt', 'r', encoding='utf-8') as f:
    while res := f.read(SIZE):
        print(res)
